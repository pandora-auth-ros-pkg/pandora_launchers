<launch>

  <arg name="robot" default="woody"/>
  <arg name="description" default="true"/>

  <arg name="state_manager" default="true"/>
  
  <arg name="motors" default="true"/>
  <arg name="dynamixel" default="true"/>
  <arg name="imu" default="true"/>
  <arg name="imu_device" default="ahrs"/>
  <arg name="arm" default="false"/>
  <arg name="hardware_tools" default="true"/>
  
  <arg name="stabilizer" default="true"/>
  <arg name="eef" default="false"/>
  
  <arg name="slam" default="true"/>
  
  <arg name="navigation" default="true"/>
  
  <arg name="data_fusion" default="false"/>
  
  <arg name="xtion" default="false"/>
  <arg name="vision" default="true"/>
  
  <arg name="bag" default="false"/>
  
  <!-- ##################################################################### -->

  <!-- Robot description -->
  <group if="$(arg description)">
    <include file="$(find pandora_robots_description)/launch/$(arg robot)/$(arg robot)_description.launch"/>
  </group>

  <!-- State manager -->
  <group if="$(arg state_manager)">
    <include file="$(find state_manager)/launch/stateManager.launch"/>
  </group>
  
  <!-- Hardware interface -->
  <group if="$(arg motors)">
    <include file="$(find pandora_motor_hardware_interface)/motor_hardware_interface/launch/motor_hardware_interface_and_controllers.launch" >
      <arg name="robot" value="$(arg robot)" />
    </include>
  </group>
  <group if="$(arg dynamixel)">
    <include file="$(find pandora_dynamixel_hardware_interface)/launch/dynamixel_hardware_interface_and_controllers.launch" />
  </group>
  <group if="$(arg imu)">
    <include file="$(find pandora_imu_hardware_interface)/imu_hardware_interface/launch/imu_hardware_interface_and_controllers.launch" >
      <arg name="device" value="$(arg imu_device)" />
    </include>
  </group>
  <group if="$(arg arm)">
    <include file="$(find pandora_arm_hardware_interface)/arm_hardware_interface/launch/arm_hardware_interface_and_controllers.launch" />
  </group>
  <group if="$(arg hardware_tools)">
    <include file="$(find pandora_hardware_tools)/launch/hardware_tools.launch" />
  </group>

  <!-- Control -->
  <group if="$(arg stabilizer)">
    <include file="$(find pandora_stabilizer)/launch/stabilizer_control.launch" />
  </group>
  <group if="$(arg eef)">
    <include file="$(find pandora_end_effector_planner)/end_effector_planner/launch/end_effector_planner.launch" />
  </group>

  <!-- Slam -->
  <group if="$(arg slam)">
    <include file="$(find pandora_slam_2d)/launch/pandora_slam_2d_real.launch" />
    <include file="$(find pandora_pose_estimation)/launch/pose_estimation_5_dof.launch" />
  </group>

  <!-- Navigation -->
  <group if="$(arg navigation)">
    <include file="$(find pandora_move_base)/launch/move_base.launch" />
    <include file="$(find pandora_exploration)/launch/explorer.launch" />
  </group>
  
  <!-- Data fusion -->
  <group if="$(arg data_fusion)">
    <include file="$(find pandora_data_fusion_launchers)/launch/data_fusion.launch" />
  </group>

  <!-- Xtion -->
  <group if="$(arg xtion)">
    <include file="$(find openni2_launch)/launch/openni2.launch">
      <arg name="camera" value="kinect" />
      <arg name="depth_registration" value="true" />
      <arg name="publish_tf" value="false" />
    </include>
  </group>
  
  <!-- Vision -->
  <group if="$(arg vision)">
    <include file="$(find pandora_vision_launchers)/launch/all_nodes.launch" />
  </group>

  <group if="$(arg bag)">
    <node name="bag" type="record" pkg="rosbag"
      args="-b 0 /kinect/rgb/image_raw/compressed /kinect/depth_registered/points /sensors/imu_rpy /tf /laser/scan /slam/map" />
  </group>
  
</launch>
