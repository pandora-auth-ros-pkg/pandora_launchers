<launch>

  <!--  Launchers Checklist  -->
  <arg name="robot" default="gio"/>
  <arg name="description" default="true"/>
  <arg name="state_manager" default="true"/>
  <arg name="motors" default="true"/>
  <arg name="linear_actuator" default="false"/>
  <arg name="dynamixel" default="true"/>
  <arg name="imu" default="true"/>
  <arg name="arm" default="true"/>
  <arg name="hardware_tools" default="true"/>
  <arg name="rpi" default="true" />
  <arg name="stabilizer" default="true"/>
  <arg name="eef" default="true"/>
  <arg name="slam" default="true"/>
  <arg name="rl" default="true"/>
  <arg name="navigation" default="true"/>
  <arg name="data_fusion" default="true"/>
  <arg name="xtion" default="false"/>
  <arg name="vision" default="true"/>
  <arg name="audio" default="true"/>
  <arg name="bag" default="false"/>
  <arg name="gui" default="true"/>

  <!-- RPi Launcher Checklist  -->
  <arg name="camera_effector" default="true" />
  <arg name="pi_camera" default="true" />
  <arg name="flir_lepton" default="true" />
  <arg name="ledstrip" default="true" />
  <arg name="raspicam" default="false" />
  <arg name="rpi_linear_actuator" default="true" />

  <!-- ########################## LAUNCH NODES ############################ -->

  <!-- Robot description -->
  <group if="$(arg description)">
    <include file="$(find pandora_robots_description)/$(arg robot)/launch/$(arg robot)_description.launch"/>
  </group>

  <!-- State manager -->
  <group if="$(arg state_manager)">
    <include file="$(find state_manager)/launch/stateManager.launch"/>
  </group>

  <!-- Hardware interface -->
  <group if="$(arg arm)">
    <include file="$(find pandora_arm_hardware_interface)/arm_hardware_interface/launch/arm_hardware_interface_and_controllers.launch" />
  </group>
  <group if="$(arg motors)">
    <include file="$(find pandora_motor_hardware_interface)/motor_hardware_interface/launch/motor_hardware_interface_and_controllers.launch" >
      <arg name="robot" value="$(arg robot)" />
    </include>
  </group>
  <group if="$(arg linear_actuator)">
    <include file="$(find pandora_linear_actuator_hardware_interface)/linear_actuator_hardware_interface/launch/linear_actuator_hardware_interface_and_controllers.launch" >
      <arg name="robot" value="$(arg robot)" />
    </include>
  </group>
  <group if="$(arg dynamixel)">
    <include file="$(find pandora_dynamixel_hardware_interface)/launch/dynamixel_hardware_interface_and_controllers.launch" />
  </group>
  <group if="$(arg imu)">
    <include file="$(find pandora_imu_hardware_interface)/imu_hardware_interface/launch/imu_hardware_interface_and_controllers.launch" >
    </include>
  </group>
  <group if="$(arg hardware_tools)">
    <include file="$(find pandora_hardware_tools)/launch/hardware_tools.launch" />
  </group>
  <group if="$(arg rpi)">
    <include file="$(find pandora_launchers)/remote_machines/launch/rpi2.launch">
      <arg name="camera_effector" value="$(arg camera_effector)" />
      <arg name="pi_camera" value="$(arg pi_camera)" />
      <arg name="flir_lepton" value="$(arg flir_lepton)" />
      <arg name="ledstrip" value="$(arg ledstrip)" />
      <arg name="raspicam" value="$(arg raspicam)" />
      <arg name="rpi_linear_actuator" value="$(arg rpi_linear_actuator)" />
    </include>
  </group>

  <!-- Control -->
  <group if="$(arg stabilizer)">
    <include file="$(find pandora_stabilizer)/launch/stabilizer_control.launch" />
  </group>
  <group if="$(arg eef)">
    <include file="$(find pandora_end_effector_controller)/launch/end_effector_controller.launch" />
  </group>

  <!-- Slam -->
  <group if="$(arg slam)">
    <include file="$(find pandora_slam_2d)/launch/pandora_slam_2d_real.launch" />
    <include file="$(find pandora_pose_estimation)/launch/pose_estimation_5_dof.launch" />

    <!-- RL -->
    <group if="$(arg rl)">
      <node name="pandora_rl" pkg="pandora_motion_control" type="kinodynamic_control.py" />
    </group>
  </group>

  <!-- Navigation -->
  <group if="$(arg navigation)">
    <include file="$(find pandora_move_base)/launch/move_base.launch" />
    <include file="$(find pandora_explorer)/launch/explorer.launch" />
    <include file="$(find pandora_sensor_coverage)/launch/sensor_coverage.launch" />
  </group>

  <!-- Data fusion -->
  <group if="$(arg data_fusion)">
    <include file="$(find pandora_data_fusion_launchers)/launch/pandora_data_fusion.launch" />
  </group>

  <!-- Xtion -->
  <group if="$(arg xtion)">
    <include file="$(find openni2_launch)/launch/openni2.launch">
      <arg name="camera" value="kinect" />
      <arg name="depth_registration" value="true" />
      <arg name="publish_tf" value="false" />
    </include>
  </group>

  <!-- Vision -->
  <group if="$(arg vision)">
    <include file="$(find pandora_vision_launchers)/launch/all_nodes.launch" />
  </group>

  <!-- Audio -->
  <group if="$(arg audio)">
    <include file="$(find pandora_voice_recognition)/launch/pandora_sound_all.launch" />
  </group>

  <!-- Rosbag -->
  <group if="$(arg bag)">
    <node name="bag" type="record" pkg="rosbag"
      args="-b 0 /kinect/rgb/image_raw/compressed /kinect/depth_registered/points /sensors/imu_rpy /tf /laser/scan /slam/map" />
  </group>

  <!-- GUI -->
  <group if="$(arg gui)">
      <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" />
      <node name="WebVideoServer" type="web_video_server" pkg="web_video_server" />
  </group>

</launch>
